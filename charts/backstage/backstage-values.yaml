global:
  auth:
    backend:
      enabled: true
  clusterRouterBase: {{ rhads_dh_ingress_domain }}
  dynamic:
    includes:
      - dynamic-plugins.default.yaml
    plugins:
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-redhat-argocd
    - disabled: false
      package: ./dynamic-plugins/dist/roadiehq-backstage-plugin-argo-cd-backend-dynamic
      pluginConfig:
        argocd:
          appLocatorMethods:
          - instances: []
            type: config
    - disabled: false
      package: ./dynamic-plugins/dist/roadiehq-scaffolder-backend-argocd-dynamic
      pluginConfig:
        argocd:
          appLocatorMethods:
          - instances: []
            type: config
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-tekton
      pluginConfig:
        dynamicPlugins:
          frontend:
            backstage-community.plugin-tekton:
              mountPoints:
              - config:
                  if:
                    allOf:
                    - isTektonCIAvailable
                  layout:
                    gridColumn: 1 / -1
                    gridRowStart: 1
                importName: TektonCI
                mountPoint: entity.page.ci/cards
    - disabled: false
      package: ./dynamic-plugins/dist/immobiliarelabs-backstage-plugin-gitlab
    - disabled: false
      package: ./dynamic-plugins/dist/immobiliarelabs-backstage-plugin-gitlab-backend-dynamic
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-jenkins
      pluginConfig:
        dynamicPlugins:
          frontend:
            backstage-community.plugin-jenkins:
              mountPoints:
              - config:
                  if:
                    allOf:
                    - isJenkinsAvailable
                  layout:
                    gridColumn: 1 / -1
                importName: EntityJenkinsContent
                mountPoint: entity.page.ci/cards
    - disabled: false
      package: oci://quay.io/redhat-tssc/backstage-plugins:1.7.0!tssc-plugins-backstage-community-plugin-multi-source-security-viewer-dynamic
      pluginConfig:
        dynamicPlugins:
          frontend:
            tssc-plugins.backstage-community-plugin-multi-source-security-viewer:
              entityTabs:
              - mountPoint: entity.page.ci
                path: /ci
                title: CI
              mountPoints:
              - config:
                  if:
                    allOf:
                    - isMultiCIAvailable
                  layout:
                    gridColumn: 1 / -1
                    gridRowStart: 2
                importName: EntityMultiCIPipelinesContent
                mountPoint: entity.page.ci/cards
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-plugin-scaffolder-backend-module-gitlab-dynamic
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-quay
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-plugin-kubernetes
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic
      pluginConfig:
        kubernetes:
          clusterLocatorMethods:
          - clusters:
            - authProvider: serviceAccount
              customResources:
              - apiVersion: v1alpha1
                group: argoproj.io
                plural: rollouts
              - apiVersion: v1
                group: route.openshift.io
                plural: routes
              - apiVersion: v1
                group: tekton.dev
                plural: pipelineruns
              - apiVersion: v1
                group: tekton.dev
                plural: taskruns
              name: rhdh-cluster
              serviceAccountToken: ${K8S_SERVICEACCOUNT_TOKEN}
              skipTLSVerify: true
              url: https://kubernetes.default.svc
            type: config
          serviceLocatorMethod:
            type: multiTenant
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-topology
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-catalog-backend-module-keycloak-dynamic
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-plugin-techdocs
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-plugin-techdocs-backend-dynamic
    - disabled: false
      package: ./dynamic-plugins/dist/backstage-community-plugin-tech-radar

upstream:
  backstage:
    image:
      registry: {{ rhads_dh_quay_backstage_registry }}
      repository: {{ rhads_dh_quay_backstage_image }}
      tag: '{{ rhads_dh_quay_backstage_image_tag }}'
      pullSecrets:
      - redhat-gpte-devhub-pull-secret
    extraEnvVars:
      - name: BACKEND_SECRET
        value: "{{ '{{ randAlphaNum 24 | b64enc }}' }}"
      - name: BACKEND_URL
        value: {{ rhads_dh_backstage_url }}
      - name: ARGOCD_USER
        value: {{ rhads_dh_argocd_user }}
      - name: ARGOCD_PASSWORD
        value: {{ rhads_dh_argocd_password }}
      - name: ARGOCD_URL
        value: {{ rhads_dh_argocd_url }}
      - name: AUTH_OIDC_CLIENT_ID
        value: {{ rhads_dh_auth_oidc_client_id }}
      - name: AUTH_OIDC_CLIENT_SECRET
        value: {{ rhads_dh_auth_oidc_client_secret }}
      - name: AUTH_OIDC_METADATA_URL
        value: {{ rhads_dh_auth_oidc_metadata_url }}
      - name: KEYCLOAK_LOGIN_REALM
        value: {{ rhads_dh_keycloak_login_realm }}
      - name: KEYCLOAK_REALM
        value: {{ rhads_dh_keycloak_realm }}
      - name: KEYCLOAK_BASE_URL
        value: {{ rhads_dh_keycloak_base_url }}
      - name: KEYCLOAK_CLIENT_ID
        value: {{ rhads_dh_keycloak_client_id }}
      - name: KEYCLOAK_CLIENT_SECRET
        value: {{ rhads_dh_keycloak_client_secret }}
      - name: GITLAB_HOST
        value: {{ rhads_dh_gitlab_host }}
      - name: GITLAB_TOKEN
        value: {{ rhads_dh_gitlab_token }}
      - name: QUAY_URL
        value: {{ rhads_dh_quay_url }}
      - name: QUAY_API_TOKEN
        value: {{ rhads_dh_quay_api_token }}
      - name: K8S_SERVICEACCOUNT_TOKEN
        value: {{ rhads_dh_k8s_serviceaccount_token }}
{% set ns = namespace(counter=0) %}
{% for target in rhads_dh_developer_hub_catalog_url %}
{% for file in target.file %}
      - name: DEVELOPER_HUB_CATALOG_URL_{{ ns.counter }}
        value: https://${GITLAB_HOST}/{{ target.group }}/{{ target.repository }}/blob/{{ target.revision }}/{{ file }}
{% set ns.counter = ns.counter + 1 %}
{% endfor %}
{% endfor %}

    appConfig:
      app:
        baseUrl: ${BACKEND_URL}
        title: Red Hat Developer Hub

      argocd:
        appLocatorMethods:
        - instances:
          - name: default
            url: ${ARGOCD_URL}
            username: ${ARGOCD_USER}
            password: ${ARGOCD_PASSWORD}
          type: config
        waitCycles: 25

      auth:
        environment: production
        providers:
          oidc:
            production:
              clientId: ${AUTH_OIDC_CLIENT_ID}
              clientSecret: ${AUTH_OIDC_CLIENT_SECRET}
              metadataUrl: ${AUTH_OIDC_METADATA_URL}
              prompt: auto
              signIn:
                resolvers:
                - resolver: preferredUsernameMatchingUserEntityName
        session:
          secret:
            $env: BACKEND_SECRET
      backend:
        auth:
          keys:
          - secret: ${BACKEND_SECRET}
        baseUrl: ${BACKEND_URL}
        cors:
          origin: ${BACKEND_URL}
      catalog:
        locations:
{% for i in range(0, ns.counter) %}
        - target: ${DEVELOPER_HUB_CATALOG_URL_{{ i }}}
          type: url
{% endfor %}
        providers:
          keycloakOrg:
            default:
              baseUrl: ${KEYCLOAK_BASE_URL}
              clientId: ${KEYCLOAK_CLIENT_ID}
              clientSecret: ${KEYCLOAK_CLIENT_SECRET}
              loginRealm: ${KEYCLOAK_LOGIN_REALM}
              realm: ${KEYCLOAK_REALM}
              schedule:
                frequency:
                  minutes: 2
                initialDelay:
                  seconds: 15
                timeout:
                  minutes: 2
        rules:
        - allow:
          - Component
          - System
          - Group
          - User
          - Resource
          - Location
          - Template
          - API
      integrations:
        gitlab:
        - host: ${GITLAB_HOST}
          baseUrl: https://${GITLAB_HOST}
          apiBaseUrl: https://${GITLAB_HOST}/api/v4
          token: ${GITLAB_TOKEN}

      permission:
        enabled: false
      proxy:
        endpoints:
          '/quay/api':
            changeOrigin: true
            headers:
              Authorization: Bearer ${QUAY_API_TOKEN}
              X-Requested-With: XMLHttpRequest
            secure: true
            target: ${QUAY_URL}
          '/developer-hub':
            target: https://${GITLAB_HOST}/
            pathRewrite:
              '^/api/proxy/developer-hub/tech-radar': /gitops/build_secured_dev_workflows_idp_gitops/-/raw/main/config/tech-radar.json
            changeOrigin: true
            secure: false

      quay:
        uiUrl: ${QUAY_URL}
      signInPage: oidc
      techdocs:
        builder: local
        generator:
          runIn: local
        publisher:
          type: local

      permission:
        enabled: false

      enabled:
        kubernetes: true
        techdocs: true
        argocd: true
        sonarqube: false
        keycloak: true
        ocm: true
        github: false
        githubOrg: false
        gitlab: true
        jenkins: false
        permission: false

  postgresql:
    auth:
      username: bn_backstage
      password: {{ rhads_dh_postgresql_password }}
      database: postgres

      # Admin user (superuser)
      postgresUser: postgres
      postgresPassword: {{ rhads_dh_postgresql_password }}
  service:
    ports:
      backend: 4180
      targetPort: oauth2-proxy

route:
  enabled: true
  host: {{ rhads_dh_backstage_host }}
  tls:
    enabled: true
    termination: "edge"